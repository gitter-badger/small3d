CMAKE_MINIMUM_REQUIRED(VERSION 3.0.2)

PROJECT(small3d)

IF("${CMAKE_CXX_COMPILER_ID}" MATCHES "Clang")
  #Uncomment for very strict warning messages
  #SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Weverything -Wno-c++98-compat -pedantic")
ENDIF("${CMAKE_CXX_COMPILER_ID}" MATCHES "Clang")

FILE(COPY "small3d/include" DESTINATION ".")
FILE(COPY "small3d/resources" DESTINATION "./bin")

IF(DEFINED WITH_GLFW AND WITH_GLFW)
  ADD_DEFINITIONS(-DSMALL3D_GLFW)
ENDIF(DEFINED WITH_GLFW AND WITH_GLFW)

IF(DEFINED BUILD_WITH_CONAN AND BUILD_WITH_CONAN)
  
  INCLUDE(${CMAKE_BINARY_DIR}/conanbuildinfo.cmake)
  CONAN_BASIC_SETUP()
  SUBDIRS(small3d)

ELSE(DEFINED BUILD_WITH_CONAN AND BUILD_WITH_CONAN)

  SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${small3d_BINARY_DIR}/bin")
  IF(MSVC)
    SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG "${small3d_BINARY_DIR}/bin")
    SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE "${small3d_BINARY_DIR}/bin")
  ENDIF(MSVC)

  SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${small3d_BINARY_DIR}/lib")
  IF(MSVC)
    SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG "${small3d_BINARY_DIR}/lib")
    SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE "${small3d_BINARY_DIR}/lib")
  ENDIF(MSVC)

  SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${small3d_BINARY_DIR}/lib")
  IF(MSVC)
    SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG "${small3d_BINARY_DIR}/lib")
    SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE "${small3d_BINARY_DIR}/lib")
  ENDIF(MSVC)

  IF(NOT UNIX OR APPLE)
    FILE(COPY "deps/include" DESTINATION ".")
    FILE(COPY "deps/lib" DESTINATION ".")
    FILE(COPY "deps/bin" DESTINATION ".")
  ENDIF(NOT UNIX OR APPLE)

  SUBDIRS(small3d)
  IF (APPLE OR WIN32)
    SET(DEPS_PATH "${CMAKE_SOURCE_DIR}/deps")
    SET(CMAKE_PREFIX_PATH ${DEPS_PATH})
    IF (APPLE)
      SET(GLEW_LIBRARY "${DEPS_PATH}/lib/libGLEW.a")
    ENDIF ()
  ENDIF ()

  SET(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)
  
  IF(DEFINED WITH_GLFW AND WITH_GLFW)
    FIND_PACKAGE(GLFW REQUIRED)
  ELSE()
    FIND_PACKAGE(SDL2 REQUIRED)
  ENDIF()

  IF(NOT WIN32)
    FIND_PACKAGE(BZip2 REQUIRED)
  ENDIF(NOT WIN32)
  
  FIND_PACKAGE(OpenGL REQUIRED)
  FIND_PACKAGE(GLEW REQUIRED)
  FIND_PACKAGE(PNG REQUIRED)
  FIND_PACKAGE(GLM)
  FIND_PACKAGE(OGG REQUIRED)
  FIND_PACKAGE(VORBIS REQUIRED)
  FIND_PACKAGE(PORTAUDIO REQUIRED)
  FIND_PACKAGE(Freetype REQUIRED)

ENDIF(DEFINED BUILD_WITH_CONAN AND BUILD_WITH_CONAN)
